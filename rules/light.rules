import org.joda.time.*
import org.openhab.core.library.types.*
import org.openhab.model.script.actions.*
import org.openhab.core.persistence.*

rule "Turn Off Lights at Midnight"
  when
    Time cron "0 00 24 ? * * *"
  then
    logDebug("rules", "Turn off Lights at Midnight")
    sendCommand(Living_Room_Lamp_Dimmer, 0)
    sendCommand(Kitchen_Lamp_Dimmer, 0)
  end
  
rule "Turn On Lights at Dusk"
  when
    Time cron "0 * * * * ?"
  then
    var DateTime daystart = new DateTime((dawnStart.state as DateTimeType).calendar.timeInMillis)
    var DateTime dayend = new DateTime((duskEnd.state as DateTimeType).calendar.timeInMillis)
    val boolean isdark = now.isBefore(daystart) || now.isAfter(dayend)
    logDebug("rules", "Current "+isdark)
    logDeubg("rules", "Prev "+previsdark)
    if (isdark && previsdark == 0) {
      logDebug("rules", "It's Dark transition!")
      sendCommand(Living_Room_Lamp_Dimmer, 100)
      sendCommand(Kitchen_Lamp_Dimmer, 100)
    } else if (previsdark && isdark == 0) {
      logDebug("rules", "It's Light transition!")
      sendCommand(Living_Room_Lamp_Dimmer, 0)
      sendCommand(Kitchen_Lamp_Dimmer, 0)
    }
    val boolean previsdark = isdark
  end
