import org.joda.time.*
import org.openhab.core.library.types.*
import org.openhab.model.script.actions.*
import org.openhab.core.persistence.*

val boolean previsdark = false
val boolean lightsOffForTheNight = false
val boolean doorbellRang = false

rule "Turn Off Lights at Midnight"
  when
    Time cron "0 0 0 ? * * *"
  then
    logDebug("rules", "Midnight - Turn OFF Living_Room_Lamp_Dimmer & Kitchen_UndercabinetX_Dimmer")
    sendCommand(Living_Room_Lamp_Dimmer, 0)
    sendCommand(Kitchen_UnderCabinet1_Dimmer, 0)
    sendCommand(Kitchen_UnderCabinet2_Dimmer, 0)
    sendCommand(GarageDoorSwitch, OFF)
    lightsOffForTheNight = true
  end

rule "Turn On/Off Lights at Dusk/Dawn"
  when
    Time cron "0 * * * * ?"
  then
    var DateTime daystart = new DateTime((Sunrise_Time.state as DateTimeType).calendar.timeInMillis)
    var DateTime dayend = new DateTime((Sunset_Time.state as DateTimeType).calendar.timeInMillis)
    val boolean isdark = now.isBefore(daystart) || now.isAfter(dayend)

    // Living Room Light
    if (isdark && previsdark == false) {
      logDebug("rules", "Sun is Setting! - Turn ON Living Room Light")
      sendCommand(Living_Room_Lamp_Dimmer, 100)
    } else if (previsdark && isdark == false && Living_Room_Lamp_Dimmer.state >= 0) {
      logDebug("rules", "Sun is Rising! - Turn OFF Living Room Light")
      lightsOffForTheNight = false
      sendCommand(Living_Room_Lamp_Dimmer, 0)
    }

    // Only want to see a lamp command on transition
    previsdark = isdark
  end

rule "Great Room Light Switch!"
  when
    Item GreatRoomSwitch received update
  then
    if (GreatRoomSwitch.state == ON) {
      logDebug("rules", "GreatRoomSwitch ON - Turn ON Living_Room_Lamp_Dimmer & Kitchen_UndercabinetX_Dimmer")
      sendCommand(Living_Room_Lamp_Dimmer, 100)
      sendCommand(Kitchen_UnderCabinet1_Dimmer, 100)
      sendCommand(Kitchen_UnderCabinet2_Dimmer, 100)
    } else if (GreatRoomSwitch.state == OFF) {
      logDebug("rules", "GreatRoomSwitch OFF - Turn OFF Living_Room_Lamp_Dimmer & Kitchen_UndercabinetX_Dimmer")
      sendCommand(Living_Room_Lamp_Dimmer, 0)
      sendCommand(Kitchen_UnderCabinet1_Dimmer, 0)
      sendCommand(Kitchen_UnderCabinet2_Dimmer, 0)
    }
  end

rule "doorbell Basement Light Notification"
	when
		Item Doorbell received update
	then
		var currentLightState = BasementProjectorSpot.state
		var newLightState = if (currentLightState > 0) 0 else 100

		logDebug("rules", "doorbellRange " + doorbellRang + " " + Doorbell.state)

		if (doorbellRang == false) {
			sendCommand(BasementProjectorSpot, newLightState)
			sendNotification("kfkkail@gmail.com", "Doorbell Rang!!")
			logDebug("rules", "Doorbell Range - Notify with Basement Spot Light")
			doorbellRang = true
			createTimer(now.plusSeconds(1)) [|
				sendCommand(BasementProjectorSpot, currentLightState)]
			createTimer(now.plusSeconds(5)) [|
				doorbellRang = false]
		}
end

rule "Basement Switch Turn off ProjectorSpotLights"
  when
    Item BasementStairsSwitch received update
  then
    if(BasementStairsSwitch.state == OFF) {
    	logDebug("rules", "BasementStairsSwitch OFF - Turn Off BasementProjectorSpot")
    	sendCommand(BasementProjectorSpot, 0)
    	sendCommand(BasementArt, 0)
    }
  end

rule "Basement Light PIR Motion"
  when
    Item BASEMENT_PIR_MOTION changed
  then
    if(BasementPIRLightControl.state == ON && BasementStairsSwitch.state == OFF) {
      if(BASEMENT_PIR_MOTION.state == OPEN  && BASEMENT_PIR_LIGHT.state <= 20) {
        logDebug("rules", "Basement Motion Detected - Turn On BasementProjectorSpot")
        sendCommand(BasementProjectorSpot, 100)
        sendCommand(BasementArt, 100)
      } else if (BASEMENT_PIR_MOTION.state == CLOSED) {
        logDebug("rules", "Basement Motion No Longer Detected - Turn Off BasementProjectorSpot")
        sendCommand(BasementProjectorSpot, 0)
        sendCommand(BasementArt, 0)
      }
    }
  end

rule "Great Room Light PIR Motion"
  when
    Item GREATROOM_PIR_MOTION changed
  then
    if(GreatRoomPIRLightControl.state == ON)
      if(GREATROOM_PIR_MOTION.state == OPEN  && GREATROOM_PIR_LIGHT.state <= 15) {
        logDebug("rules", "Great Room Motion Detected - Turn On Living_Room_Lamp_Dimmer")
        sendCommand(Living_Room_Lamp_Dimmer, 100)
        sendCommand(Kitchen_UnderCabinet1_Dimmer, 100)
        sendCommand(Kitchen_UnderCabinet2_Dimmer, 100)
      } else if (GREATROOM_PIR_MOTION.state == CLOSED && GreatRoomSwitch.state == OFF) {
        logDebug("rules", "Great Room Motion No Longer Detected - Turn Off Living_Room_Lamp_Dimmer")
        sendCommand(Living_Room_Lamp_Dimmer, 0)
        sendCommand(Kitchen_UnderCabinet1_Dimmer, 0)
        sendCommand(Kitchen_UnderCabinet2_Dimmer, 0)
      }
  end
