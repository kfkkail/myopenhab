import org.openhab.core.library.types.*
import org.openhab.model.script.actions.*
import org.openhab.core.persistence.*

// Sending Commands for Home Theater to Receiver

rule "Home Theater Mode"
  when
    Item Home_Theater_Mode changed
  then
    logDebug("rules", "Home Theater Mode Rule Ran")
    
    // If someone changes Home_Theater_Mode via gui, change receiver state
    if (Home_Theater_Mode.state == 0) {
      if (integraPower.state == ON) {
        sendCommand(integraPower, OFF)
      }
    } else if (Home_Theater_Mode.state == 1) {
      if (integraPower.state == OFF) {
        sendCommand(integraPower, ON)
      }
      if (integraSource.state != 1) {
        sendCommand(integraSource, 1)
      }
    } else if (Home_Theater_Mode.state == 2) {
      if (integraPower.state == OFF) {
        sendCommand(integraPower, ON)
      }
      if (integraSource.state != 17) {
        sendCommand(integraSource, 17)
      }
    } else if (Home_Theater_Mode.state == 3) {
      if (integraPower.state == OFF) {
        sendCommand(integraPower, ON)
      }
      if (integraSource.state != 5) {
        sendCommand(integraSource, 5)
      }
    } else if (Home_Theater_Mode.state == 4) {
      if (integraPower.state == OFF) {
        sendCommand(integraPower, ON)
      }
      if (integraSource.state != 43) {
        sendCommand(integraSource, 43)
      }
    } else if (Home_Theater_Mode.state == 5) {
      if (integraPower.state == OFF) {
        sendCommand(integraPower, ON)
      }
      if (integraSource.state != 43) {
        sendCommand(integraSource, 43)
      }
    }
  end

rule "Set Home Theater Mode"
  when
    Item integraPower changed or
    Item integraSource changed
  then
    logDebug("rules", "Set Home Theater Mode Rule Ran")
    
    //If someone changes state of receiver manually, change Home_Theater_Mode
    if (integraPower.state == OFF) {
      sendCommand(Home_Theater_Mode, 0)
    } else if (integraPower.state == ON && integraSource.state == 1) {
      sendCommand(Home_Theater_Mode, 1)
    } else if (integraPower.state == ON && integraSource.state == 17) {
      sendCommand(Home_Theater_Mode, 2)
    } else if (integraPower.state == ON && integraSource.state == 5) {
      sendCommand(Home_Theater_Mode, 3)
    } else if (integraPower.state == ON && integraSource.state == 43) {
    sendCommand(Home_Theater_Mode, 4)
    } else if (integraPower.state == ON && integraSource.state == 43) {
      sendCommand(Home_Theater_Mode, 5)
    } else {
      sendCommand(Home_Theater_Mode, 6)
    }
  end

// Sending Commands for Bar Speaker Mode to Receiver

rule "Bar Speakers OFF Mode"
  when
    Item Bar_Speaker_Mode received update 0
  then
    sendCommand(integraZ2Power, OFF)
  end
  
rule "Bar Speakers Pandora Mode"
  when
    Item Bar_Speaker_Mode received update 4
  then
    sendCommand(integraZ2Power, ON)
    sendCommand(integraZ2Source, 43)
  end
  
// Check Receiver and make sure Bar_Speaker_Mode reflects correct mode

rule "Set Bar Speaker Mode OFF"
  when
    Item integraZ2Power changed from ON to OFF
  then
    sendCommand(Bar_Speaker_Mode, 0)
  end
  
rule "Set Bar Speaker Mode Pandora"
  when
    Item integraZ2Power received update ON and
    Item integraZ2Source received update 43
  then
    sendCommand(Bar_Speaker_Mode, 4)
  end
